---
import Section from '@/components/Section.astro';
import Dark from '@/icons/Dark.astro';
import GitHub from '@/icons/GitHub.astro';
import Light from '@/icons/Light.astro';
import LinkedIn from '@/icons/LinkedIn.astro';
import Mail from '@/icons/Mail.astro';
import WorldMap from '@/icons/WorldMap.astro';
import { basics } from '@cv';

const { name, label, image, location, profiles, phone, email } = basics;
const { city, region } = location;

const SOCIAL_ICONS: Record<string, any> = {
	GitHub,
	LinkedIn,
};

const linkedInfo = profiles.find(({ network }) => network === 'LinkedIn');
const githubInfo = profiles.find(({ network }) => network === 'GitHub');
const linkedUrl = linkedInfo?.url;
const printInfo = [email, phone, linkedUrl].filter(Boolean).join(' • ');

const props = Astro.props;
---

<Section>
	<div class='container'>
		<div class='avatar'>
			<button
				id='theme-toggle-btn'
				class='light-dark-toggle'
				aria-label='Cambiar entre modo claro y oscuro'
			>
				<Light class='light-mode' aria-hidden='true' />
				<Dark class='dark-mode' aria-hidden='true' />
			</button>
			<div class='print'></div>
			<img src={image} alt={`Foto de perfil de ${name}`} width='128' height='128' />
		</div>

		<div class='info'>
			<h1>{name}</h1>
			<h2>{label}</h2>
			<span>
				<WorldMap />
				{city}, {region}
			</span>
			<footer>
				<div class='print'>
					{printInfo}
				</div>
				{
					email && (
						<a
							href={`mailto:${email}`}
							class='email'
							aria-label={`Enviar un correo electrónico a ${name} al correo ${email}`}
							target='_blank'
							rel='noopener noreferrer'
						>
							<Mail />
						</a>
					)
				}
				{
					profiles.map(({ network, username, url }) => {
						const Icon = SOCIAL_ICONS[network];

						if (!Icon) return null;
						return (
							<a
								href={url}
								class={network.toLowerCase()}
								aria-label={`Visitar perfil de ${name} en ${network}`}
								target='_blank'
								rel='noopener noreferrer'
							>
								<Icon />
							</a>
						);
					})
				}
			</footer>
		</div>
	</div>
</Section>

<style>
	.container {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		gap: 24px;
	}

	.info {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		padding-right: 2rem;
	}

	h1 {
		font-size: 2rem;
	}

	h2 {
		color: #444;
		font-weight: 500;
		font-size: 1.1rem;
		text-wrap: balance;
	}

	img {
		aspect-ratio: 1;
		object-fit: cover;
		border-radius: 12px;
		width: 128px;
	}

	span {
		color: #666;
		display: flex;
		align-items: center;
		gap: 0.25rem;
		font-size: 0.85rem;
		letter-spacing: -0.05rem;
	}

	footer {
		display: flex;
		gap: 4px;
		margin-top: 8px;

		a {
			color: #777;
			display: inline-flex;
			align-items: center;
			justify-content: center;
			width: 32px;
			height: 32px;
			border: 1px solid #eee;
			border-radius: 6px;
			transition: all 0.3s ease;

			&:hover {
				background-color: #eee;
				border-color: #ddd;
			}
		}
	}

	.avatar {
		display: flex;
		gap: 12px;
		color: #444;

		svg {
			cursor: pointer;
		}
	}

	.light-dark-toggle {
		background: none;
		border: none;
		padding: 0;
		cursor: pointer;
	}

	.print {
		display: none;
		font-size: 0.75rem;
		color: #666;
		line-height: 1.3;
	}

	@media (prefers-color-scheme: dark) {
		p {
			color: var(--text-color);
		}

		h2 {
			color: var(--h2-color);
		}

		span {
			color: var(--span-color);
		}

		.avatar {
			color: var(--avatar-color);

			img {
				border: 1px solid #333;
			}
		}

		footer a {
			color: var(--link-color);
			border-color: var(--border-color);
		}
	}

	@media (width < 680px) {
		.container {
			flex-direction: column-reverse;
			align-items: start;
		}
	}

	@media print {
		.print {
			display: block;
		}

		footer > a {
			display: none;
		}
	}
</style>
